# ================================================================
# CONFIGURAÇÃO DO PIPELINE DE AUTOMAÇÃO DE VÍDEOS
# ================================================================
# Copie este arquivo para .env e configure suas credenciais

# === CONFIGURAÇÕES OBRIGATÓRIAS ===
GEMINI_API_KEY=your_gemini_api_key_here
GOOGLE_APPLICATION_CREDENTIALS=google-drive-credentials.json

# === GOOGLE DRIVE CONFIGURATION ===
DRIVE_CLIENT_ID=your_client_id.googleusercontent.com
DRIVE_CLIENT_SECRET=your_client_secret
DRIVE_PROJECT_ID=your_project_id

# === TRACKING E MONITORAMENTO ===
SHEETS_TRACKING_ID=your_google_sheets_id_for_tracking

# === APIs OPCIONAIS (MELHORAM A QUALIDADE) ===
# YouTube API para análise de tendências
YOUTUBE_API_KEY=your_youtube_api_key

# Unsplash para imagens de alta qualidade
UNSPLASH_ACCESS_KEY=your_unsplash_key

# ElevenLabs para narração premium
ELEVENLABS_API_KEY=your_elevenlabs_key

# === CONFIGURAÇÕES DE DESENVOLVIMENTO ===
DEBUG_MODE=false
LOG_LEVEL=INFO

# === CONFIGURAÇÕES DO PIPELINE ===
VIDEO_DURATION_TARGET=300
IMAGES_PER_VIDEO=10
AUDIO_QUALITY=high

# ----------------------------------------------------------------
# GOOGLE SHEETS (OPCIONAL - Para tracking de projetos)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# APIs OPCIONAIS - Para funcionalidades avançadas
# ----------------------------------------------------------------

# OpenAI API (alternativa ao Gemini)
OPENAI_API_KEY=your_openai_api_key

# Pexels API (alternativa para imagens)
PEXELS_API_KEY=your_pexels_api_key

# ----------------------------------------------------------------
# CONFIGURAÇÕES DO PIPELINE
# ----------------------------------------------------------------

# Diretório base para saída de arquivos
OUTPUT_BASE_DIR=youtube_automation/output

# Formato de data para nomeação de pastas
DATE_FORMAT=%Y-%m-%d

# Número máximo de vídeos por dia
MAX_VIDEOS_PER_DAY=3

# Duração padrão dos vídeos (em segundos)
DEFAULT_VIDEO_DURATION=480

# ----------------------------------------------------------------
# CONFIGURAÇÕES DE QUALIDADE
# ----------------------------------------------------------------

# Resolução dos vídeos (720p, 1080p, 4k)
VIDEO_RESOLUTION=1080p

# Qualidade do áudio (128, 192, 320 kbps)

# FPS dos vídeos
VIDEO_FPS=30

# ----------------------------------------------------------------
# CONFIGURAÇÕES DE SEGURANÇA
# ----------------------------------------------------------------

# Ativar logs detalhados (true/false)

# Ativar verificações de segurança
SECURITY_CHECKS=true

# Máximo de tentativas de upload
MAX_UPLOAD_RETRIES=3

# ----------------------------------------------------------------
# CONFIGURAÇÕES EXPERIMENTAIS
# ----------------------------------------------------------------

# Usar IA para seleção automática de thumbnails
AUTO_THUMBNAIL_SELECTION=false

# Ativar geração automática de legendas
AUTO_CAPTIONS=false

# Usar análise de sentimento para otimização de conteúdo
SENTIMENT_ANALYSIS=false

# ----------------------------------------------------------------
# WEBHOOK E NOTIFICAÇÕES (OPCIONAL)
# ----------------------------------------------------------------

# Discord Webhook para notificações
DISCORD_WEBHOOK_URL=your_discord_webhook_url

# Slack Webhook para notificações
SLACK_WEBHOOK_URL=your_slack_webhook_url

# Email para notificações de erro
NOTIFICATION_EMAIL=your_email@example.com

# ----------------------------------------------------------------
# INSTRUÇÕES DE CONFIGURAÇÃO
# ----------------------------------------------------------------

# 1. Copie este arquivo para .env:
#    cp .env.example .env

# 2. Configure pelo menos estas variáveis obrigatórias:
#    - GEMINI_API_KEY
#    - GOOGLE_APPLICATION_CREDENTIALS

# 3. Baixe suas credenciais do Google Cloud:
#    - Acesse: https://console.cloud.google.com/
#    - Vá para "APIs & Services" > "Credentials"
#    - Crie uma Service Account Key
#    - Baixe o arquivo JSON e coloque no projeto

# 4. Teste a configuração:
#    python test_pipeline.py

# 5. Execute o pipeline:
#    python pipeline_integrado.py

# ================================================================